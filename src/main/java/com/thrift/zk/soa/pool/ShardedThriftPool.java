package com.thrift.zk.soa.pool;import com.thrift.zk.soa.thrift.client.ShardedThrift;import org.apache.commons.pool2.PooledObjectFactory;import org.apache.commons.pool2.impl.GenericObjectPoolConfig;/** * Author: xiajun * Date: 15/10/31 22:22 */public class ShardedThriftPool extends Pool<ShardedThrift> {    public ShardedThriftPool(GenericObjectPoolConfig config, PooledObjectFactory factory) {        super(config, factory);    }    @Override    public ShardedThrift getResource() {        return super.getResource();    }    @Override    protected void returnBrokenResource(ShardedThrift resource) {        super.returnBrokenResource(resource);    }    @Override    protected void returnResource(ShardedThrift resource) {        super.returnResource(resource);    }    /**     * 回收资源     * @param resource 连接资源     * @param force    强制删除，由于NIO断开状态不可以实时检测，所以当检测到异常后立即强制回收     */    public void close(ShardedThrift resource, boolean force) {        if (force) {            this.returnBrokenResource(resource);        } else {            if (resource != null && resource.validate()) {                this.returnResource(resource);            } else {                this.returnBrokenResource(resource);            }        }    }}